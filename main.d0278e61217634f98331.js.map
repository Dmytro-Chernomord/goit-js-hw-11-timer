{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["selector","targetDate","this","document","querySelector","refs","days","hours","mins","secs","startTimer","textContent","setInterval","currenData","Date","Math","floor","min","time","console","log"],"mappings":"kHAAA,4B,mBCmFiB,I,WAhFf,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKF,SAAWG,SAASC,cAAcJ,GACvCE,KAAKD,WAAaA,EAClBI,KAAO,CACLC,KAAMH,SAASC,cAAiBJ,EAA1B,wBACNO,MAAOJ,SAASC,cAAiBJ,EAA1B,yBACPQ,KAAML,SAASC,cAAiBJ,EAA1B,wBACNS,KAAMN,SAASC,cAAiBJ,EAA1B,yBAERE,KAAKQ,a,2BAGPA,WAAA,WAAa,WACXL,KAAKC,KAAKK,YAAc,EACxBN,KAAKE,MAAMI,YAAc,EACzBN,KAAKG,KAAKG,YAAc,EACxBN,KAAKI,KAAKE,YAAc,EAMxBC,aAAY,WACV,IAAMC,EAAa,EAAKZ,WAAa,IAAIa,KACrCD,GAAc,IAChBR,KAAKC,KAAKK,YAAcI,KAAKC,MAAMH,EAAa,OAChDR,KAAKE,MAAMI,YAAcI,KAAKC,MAC3BH,EAAa,MAAd,MAEDR,KAAKG,KAAKG,YAAc,EAAKM,IAAIJ,GAC/BR,KAAKI,KAAKE,YAAc,EAAKF,KAAKI,MAStC,M,EA2BLP,KAAA,SAAKY,GACHC,QAAQC,IAAIL,KAAKC,MAAME,EAAO,S,EAEhCX,MAAA,SAAMW,GACJH,KAAKC,MAAOE,EAAO,MAAR,O,EAEbD,IAAA,SAAIC,GACF,OAAOH,KAAKC,MAAOE,EAAO,KAAR,M,EAEpBT,KAAA,SAAKS,GACH,OAAOH,KAAKC,MAAOE,EAAO,IAAe,M,KAI5B,CAAmB,CAClClB,SAAU,WACVC,WAAY,IAAIa,KAAK,uB","file":"main.d0278e61217634f98331.js","sourcesContent":["import './styles.css';\nimport './js/timer.js';\n// import './js/dinamic.js';\n","//? Cделал еще вариант с динамической разметкой в файле dinamic.js\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = document.querySelector(selector);\n    this.targetDate = targetDate;\n    refs = {\n      days: document.querySelector(`${selector} [data-value=\"days\"]`),\n      hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\n      mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\n      secs: document.querySelector(`${selector} [data-value=\"secs\"]`),\n    };\n    this.startTimer();\n  }\n\n  startTimer() {\n    refs.days.textContent = 0;\n    refs.hours.textContent = 0;\n    refs.mins.textContent = 0;\n    refs.secs.textContent = 0;\n    // let days = 0;\n    // let hours = 0;\n    // let mins = 0;\n    // let sec = 0;\n\n    setInterval(() => {\n      const currenData = this.targetDate - new Date();\n      if (currenData >= 0) {\n        refs.days.textContent = Math.floor(currenData / (1000 * 60 * 60 * 24));\n        refs.hours.textContent = Math.floor(\n          (currenData % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n        );\n        (refs.mins.textContent = this.min(currenData)),\n          (refs.secs.textContent = this.secs(currenData));\n        // days = Math.floor(currenData / (1000 * 60 * 60 * 24));\n        // hours = Math.floor(\n        //   (currenData % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n        // );\n        // (mins = refs.mins.textContent = this.min(currenData)),\n        //   (sec = this.secs(currenData));\n        // fn();\n      }\n    }, 1000);\n    // const fn = function inserMarkup() {\n    //   const markUp = `<p>создается динамически из конструктора</p> <div class=\"timer\" id=\"timer-1\">\n    //   <div class=\"field\">\n    //     <span class=\"value\" data-value=\"days\">${days}</span>\n    //     <span class=\"label\">Days</span>\n    //   </div>\n\n    //   <div class=\"field\">\n    //     <span class=\"value\" data-value=\"hours\">${hours}</span>\n    //     <span class=\"label\">Hours</span>\n    //   </div>\n\n    //   <div class=\"field\">\n    //     <span class=\"value\" data-value=\"mins\">${mins}</span>\n    //     <span class=\"label\">Minutes</span>\n    //   </div>\n\n    //   <div class=\"field\">\n    //     <span class=\"value\" data-value=\"secs\">${sec}</span>\n    //     <span class=\"label\">Second</span>\n    //   </div>\n    // </div>`;\n    //   document.querySelector('.dinamic').innerHTML = markUp;\n    // };\n  }\n\n  days(time) {\n    console.log(Math.floor(time / (1000 * 60 * 60 * 24)));\n  }\n  hours(time) {\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  }\n  min(time) {\n    return Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n  }\n  secs(time) {\n    return Math.floor((time % (1000 * 60)) / 1000);\n  }\n}\n\nconst newTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('August 30, 2020'),\n});\n"],"sourceRoot":""}