{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["selector","targetDate","this","document","querySelector","refs","days","hours","mins","secs","startTimer","textContent","interval","setInterval","currenData","Date","min","time","Math","floor"],"mappings":"kHAAA,4B,mBCsDiB,I,WArDf,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKF,SAAWG,SAASC,cAAcJ,GACvCE,KAAKD,WAAaA,EAClBI,KAAO,CACLC,KAAMH,SAASC,cAAiBJ,EAA1B,wBACNO,MAAOJ,SAASC,cAAiBJ,EAA1B,yBACPQ,KAAML,SAASC,cAAiBJ,EAA1B,wBACNS,KAAMN,SAASC,cAAiBJ,EAA1B,yBAERE,KAAKQ,a,2BAGPA,WAAA,WACEL,KAAKC,KAAKK,YAAc,EACxBN,KAAKE,MAAMI,YAAc,EACzBN,KAAKG,KAAKG,YAAc,EACxBN,KAAKI,KAAKE,YAAc,EAExBT,KAAKU,Y,EAEPA,SAAA,WAAW,WACTC,aAAY,WACV,IAAMC,EAAa,EAAKb,WAAa,IAAIc,KAErCD,GAAc,IAChBT,KAAKC,KAAKK,YAAc,EAAKL,KAAKQ,GAClCT,KAAKE,MAAMI,YAAc,EAAKJ,MAAMO,GACnCT,KAAKG,KAAKG,YAAc,EAAKK,IAAIF,GAC/BT,KAAKI,KAAKE,YAAc,EAAKF,KAAKK,MAEtC,M,EAGLR,KAAA,SAAKW,GACH,OAAOC,KAAKC,MAAMF,EAAO,Q,EAG3BV,MAAA,SAAMU,GACJ,OAAOC,KAAKC,MAAOF,EAAO,MAAR,O,EAEpBD,IAAA,SAAIC,GACF,OAAOC,KAAKC,MAAOF,EAAO,KAAR,M,EAGpBR,KAAA,SAAKQ,GACH,OAAOC,KAAKC,MAAOF,EAAO,IAAe,M,KAQ5B,CAAmB,CAClCjB,SAAU,WACVC,WAAY,IAAIc,KAAK,uB","file":"main.d9076c0f351168a4064c.js","sourcesContent":["import './styles.css';\nimport './js/timer.js';\n// import './js/dinamic.js';\n","class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = document.querySelector(selector);\n    this.targetDate = targetDate;\n    refs = {\n      days: document.querySelector(`${selector} [data-value=\"days\"]`),\n      hours: document.querySelector(`${selector} [data-value=\"hours\"]`),\n      mins: document.querySelector(`${selector} [data-value=\"mins\"]`),\n      secs: document.querySelector(`${selector} [data-value=\"secs\"]`),\n    };\n    this.startTimer();\n  }\n\n  startTimer() {\n    refs.days.textContent = 0;\n    refs.hours.textContent = 0;\n    refs.mins.textContent = 0;\n    refs.secs.textContent = 0;\n\n    this.interval();\n  }\n  interval() {\n    setInterval(() => {\n      const currenData = this.targetDate - new Date();\n\n      if (currenData >= 0) {\n        refs.days.textContent = this.days(currenData);\n        refs.hours.textContent = this.hours(currenData);\n        (refs.mins.textContent = this.min(currenData)),\n          (refs.secs.textContent = this.secs(currenData));\n      }\n    }, 1000);\n  }\n\n  days(time) {\n    return Math.floor(time / (1000 * 60 * 60 * 24));\n  }\n\n  hours(time) {\n    return Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  }\n  min(time) {\n    return Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n  }\n\n  secs(time) {\n    return Math.floor((time % (1000 * 60)) / 1000);\n  }\n  //? выдает ошибку этого метода\n  // pad(value) {\n  //   return String(value).padStart(2, '0');\n  // }\n}\n\nconst newTimer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('August 30, 2020'),\n});\n"],"sourceRoot":""}